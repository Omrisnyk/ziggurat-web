(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"Dp+G":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return s})),a.d(t,"default",(function(){return m}));var n=a("wx14"),o=a("zLVn"),r=(a("q1tI"),a("7ljp")),i=a("hhGP"),s=(a("qKvR"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/Home.mdx"}});var c={_frontmatter:s},l=i.a;function m(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(r.b)(l,Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Welcome to the ziggurat wiki!\n[","[images/logo-ziggurat.png]","]"),Object(r.b)("p",null,"Ziggurat is a framework built to simplify Multi-Stream processing on Kafka. It can be used to create a full-fledged Clojure app that reads and processes messages from Kafka.\nZiggurat is built with the intent to abstract out"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"- reading messages from Kafka\n- retrying failed messages\n- setting up an HTTP server\n")),Object(r.b)("p",null,"from a clojure application such that a user only needs to pass a function that will be mapped to every message recieved from Kafka."))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/Home.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-home-mdx-3ce4a8ee95f50ccc9ed6.js.map