{"version":3,"sources":["webpack:///./src/components/ziggurat_logo.js","webpack:///./src/pages/index.js"],"names":["ZigguratLogo","data","useStaticQuery","placeholderImage","childImageSharp","fluid","style","width","IndexPage","title","sx","height","maxWidth","alignItems","flexDirection","fontFamily","fontSize","color","textAlign","backgroundSize","className","href","target","rel","borderRadius","background","padding","display","textDecoration","marginBottom","id","justifyContent","border","borderColor","borderStyle","listStyle"],"mappings":"gMAmCeA,EApBM,WAAO,IAAD,IACnBC,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,aAAC,EAAyCC,OAIvC,kBAAC,IAAD,CAAKC,MAAO,CAACC,MAAO,OAAQF,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHvE,mD,YCyFIG,UA/GG,kBAChB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SAKX,uBACAC,GAAI,CACFC,OAAQ,QACRJ,MAAO,QACPK,SAAU,SAGV,YAAC,IAAD,CACAF,GAAI,CAACG,WAAW,SAChBC,cAAe,WACb,YAAC,EAAD,MACF,kBACEJ,GAAI,CACFK,WAAY,OACZC,SAAU,QACVC,MAAO,QACPC,UAAW,WALf,kDAOA,iBACAR,GAAI,CACFK,WAAY,OACZC,SAAU,QACVC,MAAO,QACNE,eAAgB,SAEjB,oBAAMC,UAAU,iBAAhB,kDACF,iBAAGC,KAAK,oCACRC,OAAO,SACPC,IAAI,aACHb,GAAI,CACHc,aAAc,MACdC,WAAY,UACZC,QAAS,OACTC,QAAQ,OACRC,eAAgB,SAClB,kBAAIlB,GAAI,CAAEO,MAAO,QAASY,aAAc,MAAOd,WAAY,SAA3D,oBAOF,uBACAe,GAAG,cACHpB,GAAI,CACFC,OAAQ,OACRJ,MAAO,QACPK,SAAU,SAEV,YAAC,IAAD,CACAF,GAAI,CACFI,cAAe,SACfiB,eAAgB,SAChBlB,WAAY,WAEd,kBAAIH,GAAI,CACNK,WAAY,OACZE,MAAO,UAFT,YAIA,kBACAP,GAAI,CACFK,WAAY,OACZE,MAAO,YAHT,eAKA,uBAEA,iBAAGP,GAAI,CACLK,WAAY,OACZE,MAAO,QACPC,UAAW,SACXX,MAAO,MACPS,SAAU,SALZ,6NAQA,mBACAN,GAAI,CACFK,WAAW,OACXiB,OAAQ,MACRC,YAAa,QACbC,YAAa,QACbjB,MAAO,QACPC,UAAW,SAEX,wBACE,kBAAIZ,MAAO,CAAC6B,UAAW,SACrB,uDAGA,oDAGA,kBAAI7B,MAAO,CAACuB,aAAc,QAA1B","file":"component---src-pages-index-js-9e22c03704f5d734d1d7.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nconst ZigguratLogo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"logo-ziggurat.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\n    return <div>Picture not found</div>\n  }\n\n  return <Img style={{width: \"20%\"}} fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default ZigguratLogo\n","/** @jsx jsx */\nimport {jsx, Flex } from 'theme-ui'\n\nimport Layout from \"../components/layout\"\nimport ZigguratLogo from \"../components/ziggurat_logo\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    {/* <div sx={{\n      display: \"flex\", \n      alignItems:\"center\",\n    }}> */}\n    <section\n    sx={{\n      height: \"100vh\",\n      width: \"100vw\",\n      maxWidth: \"100%\"\n    }\n    }>\n      <Flex\n      sx={{alignItems:\"center\",\n      flexDirection: \"column\"}}>\n        <ZigguratLogo/>\n      <h1\n        sx={{\n          fontFamily: \"body\",\n          fontSize: \"2.5vw\",\n          color: \"white\",\n          textAlign: \"center\"\n          }}>Redefining how you work with real time events.</h1>\n      <p \n      sx={{\n        fontFamily: \"body\",\n        fontSize: \"1.5vw\",\n        color: \"white\",\n         backgroundSize: \"100%\"\n         }}>\n        <span className=\"gradient-text\">Powering more than 250 applications at Gojek.</span></p>\n      <a href=\"https://github.com/gojek/ziggurat\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n       sx={{\n        borderRadius: \"5px\",\n        background: \"#54b67d\",\n        padding: \"15px\",\n        display:\"flex\",\n        textDecoration: \"none\"}}>\n      <h3 sx={{ color: \"white\", marginBottom: \"0px\", fontFamily: \"body\"}}>\n        Get Started →\n        </h3>\n        {/* <RightArrow/> */}\n      </a>\n      </Flex>\n    </section>\n    <section\n    id=\"description\"\n    sx={{\n      height: \"70vh\",\n      width: \"100vw\",\n      maxWidth: \"100%\"\n    }}>\n      <Flex\n      sx={{\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n      <h1 sx={{\n        fontFamily: \"body\",\n        color: \"white\"\n      }}>Ziggurat</h1>\n      <h2 \n      sx={{\n        fontFamily: \"body\",\n        color: \"#9B7D8E\"\n      }}>/ˈzɪɡʊˌræt/</h2>\n      <br/>\n\n      <p sx={{\n        fontFamily: \"body\",\n        color: \"white\",\n        textAlign: \"center\",\n        width: \"50%\",\n        fontSize: \"100%\"\n      }}>Ziggurat is a framework built to simplify Stream processing on Kafka. It can be used to create a full-fledged Clojure app that reads and processes messages from Kafka. Ziggurat is built with the intent to abstract out\n      </p>\n      <pre\n      sx={{\n        fontFamily:\"code\",\n        border: \"2px\",\n        borderColor: \"white\",\n        borderStyle: \"solid\",\n        color: \"white\",\n        textAlign: \"left\"\n      }}>\n        <code>\n          <ul style={{listStyle: \"none\"}}>\n            <li>\n            → reading messages from Kafka\n            </li>\n            <li>\n            → retrying failed messages\n            </li>\n            <li style={{marginBottom: \"0px\"}}>\n            → setting up an HTTP server\n            </li>\n          </ul>\n        \n        </code>\n      </pre>\n      </Flex>\n    </section>\n    \n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}