{"version":3,"sources":["webpack:///./docs/Upgrade-guide.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,S,wMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kCADR,oCAGA,uBACA,iBAAQ,CACN,GAAM,yBADR,yBAGA,oQAGA,6DAA4C,6BAAGC,WAAW,KAAQ,CAC9D,KAAQ,oEADgC,8BAA5C,SAGE,6BAAGA,WAAW,KAAQ,CACpB,KAAQ,wLADV,WAHF,yCAMA,sBACE,kBAAIA,WAAW,MAAf,oBAAyC,0BAAYA,WAAW,MAAvB,gBAAzC,sHAC2C,0BAAYA,WAAW,MAAvB,cAD3C,6EAIA,kBAAIA,WAAW,MAAf,sFACA,kBAAIA,WAAW,MAAf,kCACA,kBAAIA,WAAW,MAAf,kDAEF,0HACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,kkBAOL,uEAAsD,0BAAYA,WAAW,KAAvB,iCAAtD,uEAEA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,kvBASL,0EAAyD,0BAAYA,WAAW,KAAvB,cAAzD,gFAEA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,2HAGL,sEAAqD,0BAAYA,WAAW,KAAvB,kCAArD,kEAEA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,4uBASL,wGAAuF,0BAAYA,WAAW,KAAvB,iBAAvF,uBACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qHAGL,iBAAQ,CACN,GAAM,qBADR,qBAGA,iOAGA,gRAGA,wDAAuC,6BAAGA,WAAW,KAAQ,CACzD,KAAQ,6DAD2B,yBAGvC,gJACoB,0BAAYA,WAAW,KAAvB,8CADpB,oDAGA,iGACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,48BAUL,2FACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wPAIL,+QAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,izBAgBL,8GACF,0BAAYA,WAAW,KAAvB,iBADE,2BACmF,0BAAYA,WAAW,KAAvB,aADnF,KAEA,uK,sMAMJJ,EAAWK,gBAAiB","file":"component---docs-upgrade-guide-mdx-736b5d7ff01ee66ae177.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ziggurat-web/ziggurat-web/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"upgrade-guide-for-ziggurat-310\"\n    }}>{`Upgrade Guide for Ziggurat 3.1.0`}</h1>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"configuration-changes\"\n    }}>{`Configuration Changes`}</h2>\n    <p>{`There were some breaking changes to kafka streams library being used by Ziggurat version 3.0.\nZiggurat 3.0 has upgraded kafka streams to v2.1. This requires the user to follow certain steps while\nupgrading. These are explained below.`}</p>\n    <p>{`For upgrading Ziggurat to 3.1.0, per `}<a parentName=\"p\" {...{\n        \"href\": \"https://kafka.apache.org/21/documentation/streams/upgrade-guide\"\n      }}>{`Apache Kafka Upgrade Guide`}</a>{`\nand `}<a parentName=\"p\" {...{\n        \"href\": \"https://cwiki.apache.org/confluence/display/KAFKA/KIP-268%3A+Simplify+Kafka+Streams+Rebalance+Metadata+Upgrade#KIP-268:SimplifyKafkaStreamsRebalanceMetadataUpgrade-Upgradingto2.0:\"\n      }}>{`KIP-268`}</a>{`, the user need to follow these steps`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Add a new config `}<inlineCode parentName=\"li\">{`upgrade-from`}</inlineCode>{` for each of the top level config-map in :stream-router section of\nconfig.edn. This config can be added either in `}<inlineCode parentName=\"li\">{`config.edn`}</inlineCode>{` file in the project or as an environment\nvariable,\nas explained below.`}</li>\n      <li parentName=\"ul\">{`Do a rolling deploy of the application with the newly added configuration (above).`}</li>\n      <li parentName=\"ul\">{`Remove the configs added above`}</li>\n      <li parentName=\"ul\">{`Do a rolling deploy of the application again.`}</li>\n    </ul>\n    <p>{`This can be understood with the help of an example. For the following stream-router configuration`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`:stream-router        {:topic-entity-1       {:application-id                 \"application-1\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"first-topic\"}}\n                      {:topic-entity-2       {:application-id                 \"application-2\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"second-topic\"}}\n`}</code></pre>\n    <p>{`For projects using Ziggurat version <= 2.7.2, (`}<inlineCode parentName=\"p\">{`[tech.gojek/ziggurat \"2.6.0\"]`}</inlineCode>{`, for example),\nthe new stream-router config should look like this`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`:stream-router        {:topic-entity-1       {:application-id                 \"application-1\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"first-topic\"\n                                              :upgrade-from                   \"0.11.0\"}}\n                      {:topic-entity-2       {:application-id                 \"application-2\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"second-topic\"\n                                              :upgrade-from                   \"0.11.0\"}}\n`}</code></pre>\n    <p>{`Or, if the user is not comfortable with modifying `}<inlineCode parentName=\"p\">{`config.edn`}</inlineCode>{`, equivalent environment variables can be added to\nthe project environment.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ZIGGURAT_STREAM_ROUTER_TOPIC_ENTITY_1_UPGRADE_FROM=0.11.0\nZIGGURAT_STREAM_ROUTER_TOPIC_ENTITY_2_UPGRADE_FROM=0.11.0\n`}</code></pre>\n    <p>{`For projects using Ziggurat version > 2.7.2, (`}<inlineCode parentName=\"p\">{`[tech.gojek/ziggurat \"2.12.1\"]`}</inlineCode>{`, for example), the new stream-router config\nshould look like`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`:stream-router        {:topic-entity-1       {:application-id                 \"application-1\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"first-topic\"\n                                              :upgrade-from                   \"1.1\"}}\n                      {:topic-entity-2       {:application-id                 \"application-2\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"second-topic\"\n                                              :upgrade-from                   \"1.1\"}}\n`}</code></pre>\n    <p>{`Or, an equivalent environment variable can be added for each of the entiteis in `}<inlineCode parentName=\"p\">{`stream-router`}</inlineCode>{` section. Like this`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ZIGGURAT_STREAM_ROUTER_TOPIC_ENTITY_1_UPGRADE_FROM=1.1\nZIGGURAT_STREAM_ROUTER_TOPIC_ENTITY_2_UPGRADE_FROM=1.1\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-middlewares\"\n    }}>{`Using Middlewares`}</h2>\n    <p>{`In the versions preceding 3.0, Ziggurat would only process messages which were serialized\nin protobuf format. This was a major limitation as users could not use any other formats like JSON\nor Avro. `}</p>\n    <p>{`In Ziggurat 3.0, the logic for deserialization has been extracted out as middlewares\nwhich can be used not only for deserializing a message in any given format, but\ncan be plugged together to perform a set of tasks before a message is processed.`}</p>\n    <p>{`You can read more about them at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/gojek/ziggurat#middleware-in-ziggurat\"\n      }}>{`Ziggurat Middlewares`}</a></p>\n    <p>{`As far as message processing is concerned, messages will be provided as byte arrays and the user\nhas to explicitly use `}<inlineCode parentName=\"p\">{`ziggurat.middleware.default/protobuf->hash`}</inlineCode>{` to deserialize a message\nbefore processing it.`}</p>\n    <p>{`For example, in previous versions, for this stream-routes configuration,`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`:stream-router        {:topic-entity-1       {:application-id                 \"application-1\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"first-topic\"}}\n                                              :channels {:geofence-channel {:worker-count [10 :int]\n                                                         :retry            {:count [3 :int]}}}}\n                      {:topic-entity-2       {:application-id                 \"application-2\"\n                                              :bootstrap-servers              \"localhost:9092\"\n                                              :origin-topic                   \"second-topic\"}}\n                                                                                                                                                                             :enabled [true :bool]\n`}</code></pre>\n    <p>{`a mapper function in a Ziggurat-based project would look like this`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`(init/main start-fn stop-fn {:topic-entity-1 {:handler-function  mapper-fn \n                                              :geofence-channel  channel-mapper-fn}\n                             topic-entity-2  {:handler-function  mapper-fn-2}})\n`}</code></pre>\n    <p>{`An upgrade to Ziggurat 3.0 would require the user to write a new mapper function\nwhich explicitly deserializes the message using the proto middleware (provided in Ziggurat be default)\nbefore passing it as an argument to the old mapper function.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`(def middleware-based-mapper-fn\n  (-> mapper-fn\n      (ziggurat.middleware.default/protobuf->hash com.gojek.esb.booking.BookingLogMessage :topic-entity-1)))\n      \n(def middleware-based-mapper-fn-2\n  (-> mapper-fn-2\n      (ziggurat.middleware.default/protobuf->hash com.gojek.esb.booking.BookingLogMessage :topic-entity-2)))\n      \n(def middleware-based-channel-mapper-fn\n  (-> channel-mapper-fn\n      (ziggurat.middleware.default/protobuf->hash com.gojek.esb.booking.BookingLogMessage :topic-entity-1)))\n\n(init/main start-fn stop-fn {:topic-entity-1 {:handler-function  middleware-based-mapper-fn \n                                              :geofence-channel  middleware-based-channel-mapper-fn}\n                             topic-entity-2  {:handler-function  middleware-based-mapper-fn-2}})\n`}</code></pre>\n    <p>{`A similar change will be required for all the handler-functions/channel-functions in\n`}<inlineCode parentName=\"p\">{`stream-routes`}</inlineCode>{` map which is passed to `}<inlineCode parentName=\"p\">{`init/main`}</inlineCode>{`.`}</p>\n    <p>{`Development is under way to provide a JSON middleware for deserializing JSON messages.\nIt is expected to be available in 3.1.0-alpha.2.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}