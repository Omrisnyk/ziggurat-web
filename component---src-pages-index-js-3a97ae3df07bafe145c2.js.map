{"version":3,"sources":["webpack:///./src/components/ziggurat_logo.js","webpack:///./src/pages/index.js"],"names":["ZigguratLogo","data","useStaticQuery","placeholderImage","childImageSharp","fluid","sx","width","height","IndexPage","title","minHeight","maxWidth","marginBottom","alignItems","flexDirection","justifyContent","fontFamily","fontSize","color","textAlign","letterSpacing","backgroundSize","className","href","target","rel","borderRadius","background","padding","display","textDecoration","marginTop","id","lineHeight","border","borderColor","borderStyle","listStyle","style"],"mappings":"2KA4CeA,EA5BM,WAAO,IAAD,IACnBC,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,aAAC,EAAyCC,OAK5C,YAAC,IAAD,CACEC,GAAI,CACFC,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,OACpCC,OAAQ,QAEVH,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QATxC,6C,YCwIII,UA/JG,kBAChB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SAKX,uBACEJ,GAAI,CACFK,UAAW,cACXJ,MAAO,QACPK,SAAU,OACVJ,OAAQ,QACRK,aAAc,SAGhB,YAAC,IAAD,CACEP,GAAI,CACFQ,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGlB,YAAC,EAAD,MACA,kBACEV,GAAI,CACFW,WAAY,OACZC,SAAU,CAAC,OAAQ,SAAU,SAAU,SAAU,UACjDC,MAAO,QACPC,UAAW,SACXC,cAAe,WANnB,kDAWA,iBACEf,GAAI,CACFW,WAAY,OACZC,SAAU,CAAC,UAAW,SAAU,OAAQ,SAAU,UAClDC,MAAO,QACPG,eAAgB,OAChBF,UAAW,WAGb,oBAAMG,UAAU,iBAAhB,kDAIF,uBACA,iBACEC,KAAK,oCACLC,OAAO,SACPC,IAAI,aACJpB,GAAI,CACFqB,aAAc,MACdC,WAAY,UACZC,QAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC1CC,QAAS,OACTC,eAAgB,OAChBf,eAAgB,SAChBF,WAAY,WAGd,kBACER,GAAI,CACFa,MAAO,QACPa,UAAW,MACXnB,aAAc,MACdI,WAAY,OACZC,SAAU,CAAC,UAAW,SAAU,OAAQ,SAAU,YANtD,oBAcN,uBACA,uBACEe,GAAG,cACH3B,GAAI,CACFK,UAAW,cACXJ,MAAO,QACPK,SAAU,OACVJ,OAAQ,SAGV,YAAC,IAAD,CACEF,GAAI,CACFS,cAAe,SACfC,eAAgB,SAChBF,WAAY,WAGd,kBACER,GAAI,CACFW,WAAY,OACZE,MAAO,QACPD,SAAU,CAAC,OAAQ,SAAU,SAAU,SAAU,YAJrD,YASA,kBACEZ,GAAI,CACFW,WAAY,OACZE,MAAO,UACPD,SAAU,CAAC,UAAW,SAAU,OAAQ,SAAU,YAJtD,eAUA,iBACEZ,GAAI,CACFW,WAAY,OACZE,MAAO,QACPC,UAAW,SACXb,MAAO,MACPW,SAAU,CAAC,SAAU,SAAU,SAAU,OAAQ,UACjDgB,WAAY,QAPhB,6NAeA,mBACE5B,GAAI,CACFW,WAAY,OACZkB,OAAQ,MACRC,YAAa,QACbC,YAAa,QACblB,MAAO,QACPC,UAAW,OACXS,QAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAG5C,wBACE,kBACEvB,GAAI,CACFgC,UAAW,OACXpB,SAAU,CAAC,SAAU,SAAU,SAAU,OAAQ,YAGnD,uDACA,oDACA,kBAAIqB,MAAO,CAAE1B,aAAc,QAA3B","file":"component---src-pages-index-js-3a97ae3df07bafe145c2.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nconst ZigguratLogo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"logo-ziggurat.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\n    return <div>Picture not found</div>\n  }\n\n  return (\n    <Img\n      sx={{\n        width: [\"60%\", \"50%\", \"40%\", \"30%\", \"25%\"],\n        height: \"100%\"\n      }}\n      fluid={data.placeholderImage.childImageSharp.fluid}\n    />\n  )\n}\n\nexport default ZigguratLogo\n","/** @jsx jsx */\nimport { jsx, Flex } from \"theme-ui\"\n\nimport Layout from \"../components/layout\"\nimport ZigguratLogo from \"../components/ziggurat_logo\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    {/* <div sx={{\n      display: \"flex\", \n      alignItems:\"center\",\n    }}> */}\n    <section\n      sx={{\n        minHeight: \"fit-content\",\n        width: \"100vw\",\n        maxWidth: \"100%\",\n        height: \"100vh\",\n        marginBottom: \"10vh\",\n      }}\n    >\n      <Flex\n        sx={{\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          justifyContent: \"center\"\n        }}\n      >\n        <ZigguratLogo />\n        <h1\n          sx={{\n            fontFamily: \"body\",\n            fontSize: [\"1rem\", \"1.2rem\", \"1.3rem\", \"1.5rem\", \"2.3rem\"],\n            color: \"white\",\n            textAlign: \"center\",\n            letterSpacing: \"0.05em\",\n          }}\n        >\n          Redefining how you work with real time events.\n        </h1>\n        <p\n          sx={{\n            fontFamily: \"body\",\n            fontSize: [\"0.55rem\", \"0.8rem\", \"1rem\", \"1.3rem\", \"1.8rem\"],\n            color: \"white\",\n            backgroundSize: \"100%\",\n            textAlign: \"center\",\n          }}\n        >\n          <span className=\"gradient-text\">\n            Powering more than 250 applications at Gojek.\n          </span>\n        </p>\n        <br />\n        <a\n          href=\"https://github.com/gojek/ziggurat\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          sx={{\n            borderRadius: \"5px\",\n            background: \"#31C38B\",\n            padding: [\"10px\", \"10px\", \"15px\", \"15px\", \"15px\"],\n            display: \"flex\",\n            textDecoration: \"none\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <h3\n            sx={{\n              color: \"white\",\n              marginTop: \"0px\",\n              marginBottom: \"0px\",\n              fontFamily: \"body\",\n              fontSize: [\"0.55rem\", \"0.8rem\", \"1rem\", \"1.3rem\", \"1.8rem\"],\n            }}\n          >\n            Get Started →\n          </h3>\n        </a>\n      </Flex>\n    </section>\n    <br />\n    <section\n      id=\"description\"\n      sx={{\n        minHeight: \"fit-content\",\n        width: \"100vw\",\n        maxWidth: \"100%\",\n        height: \"90vh\",\n      }}\n    >\n      <Flex\n        sx={{\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1\n          sx={{\n            fontFamily: \"body\",\n            color: \"white\",\n            fontSize: [\"1rem\", \"1.2rem\", \"1.3rem\", \"1.5rem\", \"2.3rem\"],\n          }}\n        >\n          Ziggurat\n        </h1>\n        <h2\n          sx={{\n            fontFamily: \"body\",\n            color: \"#9B7D8E\",\n            fontSize: [\"0.55rem\", \"0.8rem\", \"1rem\", \"1.3rem\", \"1.8rem\"],\n          }}\n        >\n          /ˈzɪɡʊˌræt/\n        </h2>\n\n        <p\n          sx={{\n            fontFamily: \"body\",\n            color: \"white\",\n            textAlign: \"center\",\n            width: \"60%\",\n            fontSize: [\"0.4rem\", \"0.6rem\", \"0.8rem\", \"1rem\", \"1.5rem\"],\n            lineHeight: \"1.5\",\n          }}\n        >\n          Ziggurat is a framework built to simplify Stream processing on Kafka.\n          It can be used to create a full-fledged Clojure app that reads and\n          processes messages from Kafka. Ziggurat is built with the intent to\n          abstract out\n        </p>\n        <pre\n          sx={{\n            fontFamily: \"code\",\n            border: \"2px\",\n            borderColor: \"white\",\n            borderStyle: \"solid\",\n            color: \"white\",\n            textAlign: \"left\",\n            padding: [\"10px\", \"10px\", \"10px\", \"15px\", \"20px\"],\n          }}\n        >\n          <code>\n            <ul\n              sx={{\n                listStyle: \"none\",\n                fontSize: [\"0.3rem\", \"0.5rem\", \"0.7rem\", \"1rem\", \"1.3rem\"],\n              }}\n            >\n              <li>→ reading messages from Kafka</li>\n              <li>→ retrying failed messages</li>\n              <li style={{ marginBottom: \"0px\" }}>\n                → setting up an HTTP server\n              </li>\n            </ul>\n          </code>\n        </pre>\n      </Flex>\n    </section>\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}